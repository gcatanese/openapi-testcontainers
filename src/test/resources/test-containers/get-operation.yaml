openapi: 3.0.0
info:
  title: Sample project
  version: '1.0'
  description: 'Sample API Check "API Key" '
paths:
  '/users/{userId}':
    get:
      summary: Get User Info by Query Param
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      tags:
        - basic
      parameters:
        - description: User identifier
          name: userId
          in: path
          required: true
          schema:
            type: string
            example: 888
          examples:
            valid:
              value: 1
              summary: success 200
            not found:
              value: 2
              summary: error 404

      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User Not Found

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-Key
      in: header
  schemas:
    User:
      title: User
      type: object
      description: ''
      example:
        id: 999
        firstName: Alice9 schema example
        lastName: Smith9
        email: alice.smith@gmail.com
        dateOfBirth: '1997-10-31'
        emailVerified: true
        createDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
          example: 0
        firstName:
          type: string
          example: Alix
        lastName:
          type: string
          example: Smith
        email:
          type: string
          format: email
          example: alix.smith@gmail.com
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
          example: true
        createDate:
          type: string
          format: date
          description: The date that the user was created.
          example: '2019-08-24'
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
    Error:
      title: Error object
      type: object
      description: 'An error'
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
tags:
  - name: basic
    description: Basic tag
